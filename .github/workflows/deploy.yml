name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 Checkout
        uses: actions/checkout@v3

      - name: Gradle 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle 클린 및 빌드
        run: |
          echo "✅ Gradle 빌드 시작"
          ./gradlew clean
          ./gradlew build
          echo "✅ Gradle 빌드 완료"
          echo "📁 생성된 파일 확인"
          ls -alh build/libs

      - name: EC2 SSH Key 설정
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: EC2 app.jar 디렉토리 삭제
        run: |
          echo "🧹 EC2의 app.jar 디렉토리 삭제"
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "rm -rf ~/app.jar"

      - name: EC2에 JAR, Dockerfile 전송
        run: |
          echo "📦 JAR 파일 전송 시작"
          scp -o StrictHostKeyChecking=no build/libs/yeoyu-seat-be-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app.jar
          echo "📦 JAR 전송 완료"
          echo "🐳 Dockerfile 전송 시작"
          scp -o StrictHostKeyChecking=no Dockerfile ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/Dockerfile
          echo "🐳 Dockerfile 전송 완료"

      - name: EC2에서 Docker 빌드 및 실행
        run: |
          echo "🖥️ EC2에서 Docker 빌드 및 실행 시작"
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            echo "🧹 기존 컨테이너 종료 및 삭제"
            sudo docker stop yeoyu-container || true
            sudo docker rm yeoyu-container || true

            echo "🐳 Docker 이미지 빌드 시작"
            sudo docker build -t yeoyu-backend --build-arg ACTIVE_PROFILE=prod -f Dockerfile .
            echo "🐳 Docker 이미지 빌드 완료"

            echo "🚀 Docker 컨테이너 실행"
            sudo docker run -d -p 8080:8080 --name yeoyu-container \
              -e DB_HOST=${{ secrets.RDS_HOST }} \
              -e DB_PORT=${{ secrets.RDS_PORT }} \
              -e DB_NAME=${{ secrets.RDS_DB_NAME }} \
              -e DB_USER=${{ secrets.RDS_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.RDS_PASSWORD }} \
              -e SPRING_PROFILES_ACTIVE=prod \
              yeoyu-backend
            echo "🚀 Docker 컨테이너 실행 완료"
          EOF


